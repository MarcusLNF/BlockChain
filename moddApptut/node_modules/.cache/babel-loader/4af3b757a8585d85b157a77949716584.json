{"ast":null,"code":"var _jsxFileName = \"/home/marcus/Marcus/blockchain/Lab 15/moddApptut/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { ethers } from 'ethers';\nimport { useState, useEffect } from 'react';\nimport TokenArtifact from \"./artifacts/contracts/Turing.sol/Turing.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tokenAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\nfunction App() {\n  _s();\n\n  const [tokenData, setTokenData] = useState({});\n  const [amount, setAmount] = useState(\"\");\n  const [codinome, setCodinome] = useState(\"\");\n  const [ranking, setRanking] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n\n  async function _initializeContract(init) {\n    return new ethers.Contract(tokenAddress, TokenArtifact.abi, init);\n  }\n\n  async function _getTokenData() {\n    const contract = await _initializeContract(signer);\n    const name = await contract.name();\n    const symbol = await contract.symbol();\n    setTokenData({\n      name,\n      symbol\n    });\n  }\n\n  async function requestAccount() {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  }\n\n  async function issueToken() {\n    if (!codinome || !amount) return alert(\"Preencha todos os campos!\");\n    await requestAccount();\n    const contract = await _initializeContract(signer);\n    const tx = await contract.issueToken(codinome, ethers.utils.parseEther(amount));\n    await tx.wait();\n    alert(\"Tokens emitidos com sucesso!\");\n    fetchRanking();\n  }\n\n  async function vote() {\n    if (!codinome || !amount) return alert(\"Preencha todos os campos!\");\n    await requestAccount();\n    const contract = await _initializeContract(signer);\n    const tx = await contract.vote(codinome, ethers.utils.parseEther(amount));\n    await tx.wait();\n    alert(\"Voto computado!\");\n    fetchRanking();\n  }\n\n  async function votingOn() {\n    await requestAccount();\n    const contract = await _initializeContract(signer);\n    await contract.votingOn();\n    alert(\"Votação ativada!\");\n  }\n\n  async function votingOff() {\n    await requestAccount();\n    const contract = await _initializeContract(signer);\n    await contract.votingOff();\n    alert(\"Votação desativada!\");\n  }\n\n  async function fetchRanking() {\n    const contract = await _initializeContract(provider);\n    const accountList = Object.keys(TokenArtifact.abi).filter(name => name.startsWith(\"nome\"));\n    const balances = await Promise.all(accountList.map(async nome => {\n      const address = await contract.nomeParaEndereco(nome);\n      const balance = await contract.balanceOf(address);\n      return {\n        nome,\n        balance: parseFloat(ethers.utils.formatEther(balance))\n      };\n    }));\n    balances.sort((a, b) => b.balance - a.balance);\n    setRanking(balances);\n  }\n\n  useEffect(() => {\n    fetchRanking();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: _getTokenData,\n        children: \"Get Token Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [tokenData.name, \" (\", tokenData.symbol, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Emitir Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setCodinome(e.target.value),\n        placeholder: \"Codinome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setAmount(e.target.value),\n        placeholder: \"Quantidade\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: issueToken,\n        children: \"Emitir Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Votar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: vote,\n        children: \"Votar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Controle de Vota\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: votingOn,\n        children: \"Ativar Vota\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: votingOff,\n        children: \"Desativar Vota\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ranking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: ranking.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [user.nome, \": \", user.balance, \" Turings\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4YFCvDK866IcZSJlmujcLCFKtns=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/marcus/Marcus/blockchain/Lab 15/moddApptut/src/App.js"],"names":["ethers","useState","useEffect","TokenArtifact","tokenAddress","App","tokenData","setTokenData","amount","setAmount","codinome","setCodinome","ranking","setRanking","accounts","setAccounts","provider","providers","Web3Provider","window","ethereum","signer","getSigner","_initializeContract","init","Contract","abi","_getTokenData","contract","name","symbol","requestAccount","request","method","issueToken","alert","tx","utils","parseEther","wait","fetchRanking","vote","votingOn","votingOff","accountList","Object","keys","filter","startsWith","balances","Promise","all","map","nome","address","nomeParaEndereco","balance","balanceOf","parseFloat","formatEther","sort","a","b","e","target","value","user","index"],"mappings":"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","sourcesContent":["import './App.css';\nimport { ethers } from 'ethers';\nimport { useState, useEffect } from 'react';\nimport TokenArtifact from \"./artifacts/contracts/Turing.sol/Turing.json\";\n\nconst tokenAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\nfunction App() {\n  const [tokenData, setTokenData] = useState({});\n  const [amount, setAmount] = useState(\"\");\n  const [codinome, setCodinome] = useState(\"\");\n  const [ranking, setRanking] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n\n  async function _initializeContract(init) {\n    return new ethers.Contract(tokenAddress, TokenArtifact.abi, init);\n  }\n\n  async function _getTokenData() {\n    const contract = await _initializeContract(signer);\n    const name = await contract.name();\n    const symbol = await contract.symbol();\n    setTokenData({ name, symbol });\n  }\n\n  async function requestAccount() {\n    await window.ethereum.request({ method: 'eth_requestAccounts' });\n  }\n\n  async function issueToken() {\n    if (!codinome || !amount) return alert(\"Preencha todos os campos!\");\n    await requestAccount();\n    const contract = await _initializeContract(signer);\n    const tx = await contract.issueToken(codinome, ethers.utils.parseEther(amount));\n    await tx.wait();\n    alert(\"Tokens emitidos com sucesso!\");\n    fetchRanking();\n  }\n\n  async function vote() {\n    if (!codinome || !amount) return alert(\"Preencha todos os campos!\");\n    await requestAccount();\n    const contract = await _initializeContract(signer);\n    const tx = await contract.vote(codinome, ethers.utils.parseEther(amount));\n    await tx.wait();\n    alert(\"Voto computado!\");\n    fetchRanking();\n  }\n\n  async function votingOn() {\n    await requestAccount();\n    const contract = await _initializeContract(signer);\n    await contract.votingOn();\n    alert(\"Votação ativada!\");\n  }\n\n  async function votingOff() {\n    await requestAccount();\n    const contract = await _initializeContract(signer);\n    await contract.votingOff();\n    alert(\"Votação desativada!\");\n  }\n\n  async function fetchRanking() {\n    const contract = await _initializeContract(provider);\n    const accountList = Object.keys(TokenArtifact.abi).filter(name => name.startsWith(\"nome\"));\n    const balances = await Promise.all(\n      accountList.map(async (nome) => {\n        const address = await contract.nomeParaEndereco(nome);\n        const balance = await contract.balanceOf(address);\n        return { nome, balance: parseFloat(ethers.utils.formatEther(balance)) };\n      })\n    );\n    balances.sort((a, b) => b.balance - a.balance);\n    setRanking(balances);\n  }\n\n  useEffect(() => {\n    fetchRanking();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button onClick={_getTokenData}>Get Token Data</button>\n        <h1>{tokenData.name} ({tokenData.symbol})</h1>\n        \n        <h2>Emitir Tokens</h2>\n        <input onChange={e => setCodinome(e.target.value)} placeholder=\"Codinome\" />\n        <input onChange={e => setAmount(e.target.value)} placeholder=\"Quantidade\" type=\"number\" />\n        <button onClick={issueToken}>Emitir Tokens</button>\n        \n        <h2>Votar</h2>\n        <button onClick={vote}>Votar</button>\n        \n        <h2>Controle de Votação</h2>\n        <button onClick={votingOn}>Ativar Votação</button>\n        <button onClick={votingOff}>Desativar Votação</button>\n\n        <h2>Ranking</h2>\n        <ul>\n          {ranking.map((user, index) => (\n            <li key={index}>{user.nome}: {user.balance} Turings</li>\n          ))}\n        </ul>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}